mutate(r10.sym.d=ifelse(r10.sym.d==1,1-(1/40),r10.sym.d))%>%
mutate(r60.as.d=ifelse(r60.as.d==1,1-(1/40),r60.as.d))%>%
mutate(r60.sym.d=ifelse(r60.sym.d==1,1-(1/40),r60.sym.d))%>%
mutate(r120.as.d=ifelse(r120.as.d==1,1-(1/40),r120.as.d))%>%
mutate(r120.sym.d=ifelse(r120.sym.d==1,1-(1/40),r120.sym.d))
Exp1_sdt$r10.as.d_z <- qnorm(Exp1_sdt$r10.as.d)
Exp1_sdt$r60.as.d_z <- qnorm(Exp1_sdt$r60.as.d)
Exp1_sdt$r120.as.d_z <- qnorm(Exp1_sdt$r120.as.d)
Exp1_sdt$r10.sym.d_z <- qnorm(Exp1_sdt$r10.sym.d)
Exp1_sdt$r60.sym.d_z <- qnorm(Exp1_sdt$r60.sym.d)
Exp1_sdt$r120.sym.d_z <- qnorm(Exp1_sdt$r120.sym.d)
Exp1_sdt$r10.as.f_z <- qnorm(Exp1_sdt$r10.as.f)
Exp1_sdt$r60.as.f_z <- qnorm(Exp1_sdt$r60.as.f)
Exp1_sdt$r120.as.f_z <- qnorm(Exp1_sdt$r120.as.f)
Exp1_sdt$r10.sym.f_z <- qnorm(Exp1_sdt$r10.sym.f)
Exp1_sdt$r60.sym.f_z <- qnorm(Exp1_sdt$r60.sym.f)
Exp1_sdt$r120.sym.f_z <- qnorm(Exp1_sdt$r120.sym.f)
Exp1_dpr <- Exp1_sdt%>%
mutate(r10.as.dp=r10.as.d_z-r10.as.f_z)%>%
mutate(r10.sym.dp=r10.sym.d_z-r10.sym.f_z)%>%
mutate(r60.as.dp=r60.as.d_z-r60.as.f_z)%>%
mutate(r60.sym.dp=r60.sym.d_z-r60.sym.f_z)%>%
mutate(r120.as.dp=r120.as.d_z-r120.as.f_z)%>%
mutate(r120.sym.dp=r120.sym.d_z-r120.sym.f_z)%>%
select(subject,r10.as.dp,r10.sym.dp,r60.as.dp,r60.sym.dp,r120.as.dp,r120.sym.dp)
#wide to long
Exp1_dpr_long <- reshape(Exp1_dpr,
direction = 'long',
idvar = 'subject',
varying = c(2:7),
timevar='rotation',
times=c('r10', 'r60','r120'),
v.names=c('as.dp', 'sym.dp'))
Exp1_dpr_long <- gather(Exp1_dpr_long,symmetry,dp,as.dp:sym.dp,factor_key = T)
Exp1_dpr_long$rotation <- as.factor(Exp1_dpr_long$rotation)
Exp1_dpr_long$subject <- as.factor(Exp1_dpr_long$subject)
Exp1_dpr_long$symmetry <-recode(Exp1_dpr_long$symmetry,"'as.dp'='asymmetrical';'sym.dp'='symmetrical'")
Exp1_dpr_long$rotation <-recode(Exp1_dpr_long$rotation,"'r10'='10-degree';'r60'='60-degree';'r120'='120-degree'")
Exp1_dpr_long <-Exp1_dpr_long%>%
mutate(rotation = forcats::fct_relevel(rotation, c("10-degree", "60-degree", "120-degree")))
Exp1_dpr_long <- Exp1_dpr_long%>%
mutate(rotation_num = dplyr::case_when(
rotation == '10-degree'  ~ 10,
rotation == '60-degree'  ~ 60,
rotation == '120-degree'  ~ 120))
Exp1_psy <- Exp1%>%
select(subject,PF,CC,MRT_M,MRT_O)%>%
mutate(MRT=MRT_M+MRT_O)
Exp1_psy <- Exp1_ACC%>%
merge(Exp1_psy,.,by="subject")%>%
mutate(sym.Acc.s=rowSums(.[c("r10.sym.s","r60.sym.s","r120.sym.s")])/3)%>%
mutate(sym.Acc.d=rowSums(.[c("r10.sym.d","r60.sym.d","r120.sym.d")])/3)%>%
mutate(as.Acc.s=rowSums(.[c("r10.as.s","r60.as.s","r120.as.s")])/3)%>%
mutate(as.Acc.d=rowSums(.[c("r10.as.d","r60.as.d","r120.as.d")])/3)%>%
mutate(sym.Acc.f_z=ifelse(sym.Acc.s==1,qnorm(1/120),qnorm(1-sym.Acc.s)))%>%
mutate(sym.Acc.h_z=ifelse(sym.Acc.d==1,qnorm(1-1/120),qnorm(sym.Acc.d)))%>%
mutate(as.Acc.f_z=ifelse(as.Acc.s==1,qnorm(1/120),qnorm(1-as.Acc.s)))%>%
mutate(as.Acc.h_z=ifelse(as.Acc.d==1,qnorm(1-1/120),qnorm(as.Acc.d)))%>%
mutate(sym.Dp=sym.Acc.h_z-sym.Acc.f_z)%>%
mutate(as.Dp=as.Acc.h_z-as.Acc.f_z)%>%
mutate(r10.Acc.s=rowSums(.[c("r10.sym.s","r10.as.s")])/2)%>%
mutate(r10.Acc.d=rowSums(.[c("r10.sym.d","r10.as.d")])/2)%>%
mutate(r60.Acc.s=rowSums(.[c("r60.sym.s","r60.as.s")])/2)%>%
mutate(r60.Acc.d=rowSums(.[c("r60.sym.d","r60.as.d")])/2)%>%
mutate(r120.Acc.s=rowSums(.[c("r120.sym.s","r120.as.s")])/2)%>%
mutate(r120.Acc.d=rowSums(.[c("r120.sym.d","r120.as.d")])/2)%>%
mutate(r10.Acc.f_z=ifelse(r10.Acc.s==1,qnorm(1/120),qnorm(1-r10.Acc.s)))%>%
mutate(r10.Acc.h_z=ifelse(r10.Acc.d==1,qnorm(1-1/120),qnorm(r10.Acc.d)))%>%
mutate(r60.Acc.f_z=ifelse(r60.Acc.s==1,qnorm(1/120),qnorm(1-r60.Acc.s)))%>%
mutate(r60.Acc.h_z=ifelse(r60.Acc.d==1,qnorm(1-1/120),qnorm(r60.Acc.d)))%>%
mutate(r120.Acc.f_z=ifelse(r120.Acc.s==1,qnorm(1/120),qnorm(1-r120.Acc.s)))%>%
mutate(r120.Acc.h_z=ifelse(r120.Acc.d==1,qnorm(1-1/120),qnorm(r120.Acc.d)))%>%
mutate(r10.Dp=r10.Acc.h_z-r10.Acc.f_z)%>%
mutate(r60.Dp=r60.Acc.h_z-r60.Acc.f_z)%>%
mutate(r120.Dp=sym.Acc.h_z-r120.Acc.f_z)%>%
select(subject,sym.Dp,as.Dp,r10.Dp,r60.Dp,r120.Dp,PF,CC,MRT_M,MRT_O,MRT)
#Exp1_spab <- merge(Exp1_dpr,Exp1_psy,by="subject")
#hist(Exp1_psy$sym.Acc.s)
psych::describe(Exp1_psy[,-1])
cor.test(MRT_M,MRT_O)
cor.test(MRT_M,MRT_O,data=Exp1_psy)
cor.test(MRT_M~MRT_O,data=Exp1_psy)
?cor.test
cor.test(Exp1_psy$MRT_M,Exp1_psy$MRT_O)
Exp1_spab <- merge(Exp1_psy,Exp1_dpr_long,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_num=dplyr::case_when(
rotation == '10-degree'  ~ 10,
rotation == '60-degree'  ~ 60,
rotation == '120-degree'  ~ 120))%>%
mutate(rotation_s=scale(rotation_num,center=T,scale=T))%>%
select(subject,rotation_s,symmetry,dp,SA)
#Exp1_spab <- Exp1_spab %>%
#  dplyr::mutate(rotation_num = dplyr::case_when(
#  rotation == '10-degree'  ~ 10,
#  rotation == '60-degree'  ~ 60,
#  rotation == '120-degree'  ~ 120))
#Exp1_spab$rotation_num.c <- scale(Exp1_spab$rotation_num, center = T,scale=T)
Exp1_spab$subject <- as.factor(Exp1_spab$subject)
Exp1_spab$symmetry <- as.factor(Exp1_spab$symmetry)
Exp1_spab$symmetry <- relevel(Exp1_spab$symmetry,ref= 'symmetrical')
plot(data=Exp1_spab,x=rotation_num,y=rotation_s)
Exp1_spab <- merge(Exp1_psy,Exp1_dpr_long,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_num=dplyr::case_when(
rotation == '10-degree'  ~ 10,
rotation == '60-degree'  ~ 60,
rotation == '120-degree'  ~ 120))%>%
mutate(rotation_s=scale(rotation_num,center=T,scale=T))%>%
select(subject,rotation_s,rotation_num,symmetry,dp,SA)
plot(data=Exp1_spab,x=rotation_num,y=rotation_s)
Exp1_spab$rotation_num
plot(Exp1_spab$rotation_num,Exp1_spab$rotation_s)
Exp1_spab$rotation_s
60/45*.34
60/45*.31
setwd("~/Documents/Third Year Project/Chemistry/SymmetryDataAnalysis/RawData/3C.1")
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1")
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1")
thepath = "~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1"
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyverse)
txt_files_ls = list.files(path=thepath, pattern = "*.txt")
txt_files_df <- lapply(txt_files_ls, function(x) { tmp <- try(read.table(file = x, header = TRUE, sep=";"))
if (!inherits(tmp, 'try-error')) tmp
})
combined_df <- do.call("rbind", lapply(txt_files_df, as.data.frame))
# finds -99999 values in the accuracy column and sets them to NA so that we can omit them and saving a new data frame
combined_df$accuracy[combined_df$accuracy == -99999] <- 0
# finds timed-out trials and sets them to NA
combined_df$time[combined_df$time == -1] <- NA
# no dual task trials set as NA
combined_df$dualTaskAcc[combined_df$dualTaskAcc == -99] <- NA
# ignore clockwise versus counterclockwise
combined_df$rotation <- with(combined_df, ifelse(rotation <= 0, -rotation, rotation))
# Remove invalid participants
combined_df <- combined_df[!combined_df$subject %in% c(10,13,28),]
# Remove timed-out trials
combined_df_noTimeOut <- combined_df[complete.cases(combined_df[, "time"]),]
View(combined_df_noTimeOut)
#remove incorrect trials
combined_df_noTimeOut <- combined_df_noTimeOut[combined_df_noTimeOut$accuracy==1,]
# calculate how many percentage of trials were removed
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
# calculate mean for different types of trials
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
# rename the mean variable to RT (you may need to change the number 5, which indicates the column for mean in your dataset)
names(TIME)[5] <- "RT"
# get wide dataset
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
#descriptive statistics
TIME%>%
group_by(rotation, symmetry,change) %>%
dplyr::summarise(
count = n(),
mean = mean(rt, na.rm = TRUE),
se = sd(rt, na.rm = TRUE)/sqrt(count)
)
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1")
thepath = "~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1"
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyverse)
library(lme4)#linear mixed model
#install.packages("rstatix")
library(rstatix)
library(simr)# power analysis
txt_files_ls = list.files(path=thepath, pattern = "*.txt")
txt_files_df <- lapply(txt_files_ls, function(x) { tmp <- try(read.table(file = x, header = TRUE, sep=";"))
if (!inherits(tmp, 'try-error')) tmp
})
combined_df <- do.call("rbind", lapply(txt_files_df, as.data.frame))
# finds -99999 values in the accuracy column and sets them to NA so that we can omit them and saving a new data frame
combined_df$accuracy[combined_df$accuracy == -99999] <- 0
# finds timed-out trials and sets them to NA
combined_df$time[combined_df$time == -1] <- NA
# no dual task trials set as NA
combined_df$dualTaskAcc[combined_df$dualTaskAcc == -99] <- NA
# ignore clockwise versus counterclockwise
combined_df$rotation <- with(combined_df, ifelse(rotation <= 0, -rotation, rotation))
combined_df <- combined_df[!combined_df$subject %in% c(10,13,28),]
combined_df_noTimeOut <- combined_df[complete.cases(combined_df[, "time"]),]
#remove incorrect trials
combined_df_noTimeOut <- combined_df_noTimeOut[combined_df_noTimeOut$accuracy==1,]
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,
startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
names(TIME)[5] <- "RT"
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
#wide to long
Exp1_RT_long <- reshape(recastTIME,
direction = 'long',
idvar = 'subject',
varying = c(2:13),
timevar='rotation',
times=c('RT_10', 'RT_60','RT_120'),
v.names=c('as_0', 'as_1','sym_0', 'sym_1'))
Exp1_RT_long <- reshape(Exp1_RT_long,
direction = 'long',
idvar = c('subject','rotation'),
varying = c(3:6),
timevar='symmetry',
times=c('as', 'sym'),
v.names=c('0', '1'))
names(Exp1_RT_long)[4:5] <- c("no-change","change")
Exp1_RT_long <- tidyr::gather(Exp1_RT_long,change,rt,"no-change":"change",factor_key = T)
Exp1_RT_long$rotation <- as.factor(Exp1_RT_long$rotation)
Exp1_RT_long$subject <- as.factor(Exp1_RT_long$subject)
Exp1_RT_long <-Exp1_RT_long%>%
mutate(rotation = forcats::fct_relevel(rotation, c("RT_10", "RT_60", "RT_120")))
#library(foreign)
Exp1 <- read.spss('Input_3C.1_non-combined_6.12.19.sav',to.data.frame = T)
library(foreign)
Exp1 <- read.spss('Input_3C.1_non-combined_6.12.19.sav',to.data.frame = T)
library(foreign)
Exp1 <- read.spss('Input_3C.1_non-combined_6.12.19.sav',to.data.frame = T)
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1")
thepath = "~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1"
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyverse)
library(lme4)#linear mixed model
#install.packages("rstatix")
library(rstatix)
library(simr)# power analysis
txt_files_ls = list.files(path=thepath, pattern = "*.txt")
txt_files_df <- lapply(txt_files_ls, function(x) { tmp <- try(read.table(file = x, header = TRUE, sep=";"))
if (!inherits(tmp, 'try-error')) tmp
})
combined_df <- do.call("rbind", lapply(txt_files_df, as.data.frame))
# finds -99999 values in the accuracy column and sets them to NA so that we can omit them and saving a new data frame
combined_df$accuracy[combined_df$accuracy == -99999] <- 0
# finds timed-out trials and sets them to NA
combined_df$time[combined_df$time == -1] <- NA
# no dual task trials set as NA
combined_df$dualTaskAcc[combined_df$dualTaskAcc == -99] <- NA
# ignore clockwise versus counterclockwise
combined_df$rotation <- with(combined_df, ifelse(rotation <= 0, -rotation, rotation))
combined_df <- combined_df[!combined_df$subject %in% c(10,13,28),]
combined_df_noTimeOut <- combined_df[complete.cases(combined_df[, "time"]),]
#remove incorrect trials
combined_df_noTimeOut <- combined_df_noTimeOut[combined_df_noTimeOut$accuracy==1,]
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,
startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
names(TIME)[5] <- "RT"
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
#wide to long
Exp1_RT_long <- reshape(recastTIME,
direction = 'long',
idvar = 'subject',
varying = c(2:13),
timevar='rotation',
times=c('RT_10', 'RT_60','RT_120'),
v.names=c('as_0', 'as_1','sym_0', 'sym_1'))
Exp1_RT_long <- reshape(Exp1_RT_long,
direction = 'long',
idvar = c('subject','rotation'),
varying = c(3:6),
timevar='symmetry',
times=c('as', 'sym'),
v.names=c('0', '1'))
names(Exp1_RT_long)[4:5] <- c("no-change","change")
Exp1_RT_long <- tidyr::gather(Exp1_RT_long,change,rt,"no-change":"change",factor_key = T)
Exp1_RT_long$rotation <- as.factor(Exp1_RT_long$rotation)
Exp1_RT_long$subject <- as.factor(Exp1_RT_long$subject)
Exp1_RT_long <-Exp1_RT_long%>%
mutate(rotation = forcats::fct_relevel(rotation, c("RT_10", "RT_60", "RT_120")))
library(foreign)
Exp1 <- read.spss('Input_3C.1_non-combined_6.12.19.sav',to.data.frame = T)
View(Exp1_RT_long)
library(haven)
dataset <- read_sav(NULL)
View(dataset)
library(haven)
Input_3C_1_non_combined_6_12_19 <- read_sav("Input_3C.1_non-combined_6.12.19.sav")
View(Input_3C_1_non_combined_6_12_19)
library(haven)
Exp1 <- read_sav("Input_3C.1_non-combined_6.12.19.sav")
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.1")
library(haven)
Exp1 <- read_sav("Input_3C.1_non-combined_6.12.19.sav")
Exp1<- Exp1[-c(46,47),]
Exp1_psy <- Exp1%>%
select(subject,PF,CC,MRT_M,MRT_O)%>%
mutate(MRT=MRT_M+MRT_O)
Exp1_spabRT <- merge(TIME,Exp1_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp1_spabRT$change <- as.factor(Exp1_spabRT$change)
Exp1_spabRT <- within(Exp1_spabRT,change <- relevel(change,ref="0"))
Exp1_spabRT <- within(Exp1_spabRT,startsym <- relevel(startsym,ref="as"))
Exp1.lmmRT <- lmer(RT ~ rotation_s*startsym*change+ (1|subject), data = Exp1_spabRT, REML = F)
summary(Exp1.lmmRT)
Anova(Exp1.lmmRT)
confint(Exp1.lmmRT)
ggExtra:::ggMarginalGadgetAddin ()
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.2")
thepath = "~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.2"
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(lme4)#linear mixed model
#install.packages("rstatix")
library(rstatix)
##read raw text data
txt_files_ls = list.files(path=thepath, pattern = "*.txt")
txt_files_df <- lapply(txt_files_ls, function(x) { tmp <- try(read.table(file = x, header = TRUE, sep=";"))
if (!inherits(tmp, 'try-error')) tmp
})
combined_df <- do.call("rbind", lapply(txt_files_df, as.data.frame))
# finds -99999 values in the accuracy column and sets them to NA so that we can omit them and saving a new data frame
combined_df$accuracy[combined_df$accuracy == -99999] <- 0
# finds timed-out trials and sets them to NA
combined_df$time[combined_df$time == -1] <- NA
# no dual task trials set as NA
combined_df$dualTaskAcc[combined_df$dualTaskAcc == -99] <- NA
# ignore clockwise versus counterclockwise
combined_df$rotation <- with(combined_df, ifelse(rotation <= 0, -rotation, rotation))
combined_df<- combined_df[!combined_df$subject%in%c(104,105,112,115,116,128,131,133,144,147,153,150),]
#remove incorrect trials
combined_df_noTimeOut <- combined_df_noTimeOut[combined_df_noTimeOut$accuracy==1,]
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,
startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
names(TIME)[5] <- "RT"
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
#wide to long
Exp2_RT_long <- reshape(recastTIME,
direction = 'long',
idvar = 'subject',
varying = c(2:13),
timevar='rotation',
times=c('RT_10', 'RT_60','RT_120'),
v.names=c('as_0', 'as_1','sym_0', 'sym_1'))
Exp2_RT_long <- reshape(Exp2_RT_long,
direction = 'long',
idvar = c('subject','rotation'),
varying = c(3:6),
timevar='symmetry',
times=c('as', 'sym'),
v.names=c('0', '1'))
names(Exp2_RT_long)[4:5] <- c("no-change","change")
Exp2_RT_long <- tidyr::gather(Exp2_RT_long,change,rt,"no-change":"change",factor_key = T)
Exp2_RT_long$rotation <- as.factor(Exp2_RT_long$rotation)
Exp2_RT_long$subject <- as.factor(Exp2_RT_long$subject)
Exp2_RT_long <-Exp2_RT_long%>%
mutate(rotation = forcats::fct_relevel(rotation, c("RT_10", "RT_60", "RT_120")))
Exp2 <- read.spss('Input_3C.2_8.01.19.sav',to.data.frame = T)
Exp2<- Exp2[-62,]
Exp2_psy <- Exp2%>%
select(subject,PF,CC,VR,RAPM)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp2_spabRT$change <- as.factor(Exp2_spabRT$change)
Exp2_spabRT <- within(Exp2_spabRT,change <- relevel(change,ref="0"))
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,
startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
names(TIME)[5] <- "RT"
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
#wide to long
Exp2_RT_long <- reshape(recastTIME,
direction = 'long',
idvar = 'subject',
varying = c(2:13),
timevar='rotation',
times=c('RT_10', 'RT_60','RT_120'),
v.names=c('as_0', 'as_1','sym_0', 'sym_1'))
Exp2_RT_long <- reshape(Exp2_RT_long,
direction = 'long',
idvar = c('subject','rotation'),
varying = c(3:6),
timevar='symmetry',
times=c('as', 'sym'),
v.names=c('0', '1'))
names(Exp2_RT_long)[4:5] <- c("no-change","change")
Exp2_RT_long <- tidyr::gather(Exp2_RT_long,change,rt,"no-change":"change",factor_key = T)
Exp2_RT_long$rotation <- as.factor(Exp2_RT_long$rotation)
Exp2_RT_long$subject <- as.factor(Exp2_RT_long$subject)
Exp2_RT_long <-Exp2_RT_long%>%
mutate(rotation = forcats::fct_relevel(rotation, c("RT_10", "RT_60", "RT_120")))
#descriptive statistics
Exp2_RT_summary <- Exp2_RT_long%>%
group_by(rotation_num, symmetry,change) %>%
dplyr::summarise(
count = n(),
mean = mean(rt, na.rm = TRUE),
se = sd(rt, na.rm = TRUE)/sqrt(count)
)
Exp2_RT_long$symmetry <-recode(Exp2_RT_long$symmetry,'as'='asymmetrical','sym'='symmetrical')
Exp2_RT_long <- Exp2_RT_long%>%
mutate(rotation_num = dplyr::case_when(
rotation == 'RT_10'  ~ 10,
rotation == 'RT_60'  ~ 60,
rotation == 'RT_120'  ~ 120))
#descriptive statistics
Exp2_RT_summary <- Exp2_RT_long%>%
group_by(rotation_num, symmetry,change) %>%
dplyr::summarise(
count = n(),
mean = mean(rt, na.rm = TRUE),
se = sd(rt, na.rm = TRUE)/sqrt(count)
)
Exp2_RT_summary
Exp2_RT_long$symmetry <-recode(Exp2_RT_long$symmetry,'as'='asymmetrical','sym'='symmetrical')
Exp2_RT_long <- Exp2_RT_long%>%
mutate(rotation_num = dplyr::case_when(
rotation == 'RT_10'  ~ 10,
rotation == 'RT_60'  ~ 60,
rotation == 'RT_120'  ~ 120))
#descriptive statistics
Exp2_RT_summary <- Exp2_RT_long%>%
group_by(rotation_num, symmetry,change) %>%
dplyr::summarise(
count = n(),
mean = mean(rt, na.rm = TRUE),
se = sd(rt, na.rm = TRUE)/sqrt(count)
)
Exp2_RT_summary
Exp2 <- read.spss('Input_3C.2_8.01.19.sav',to.data.frame = T)
Exp2<- Exp2[-62,]
Exp2_psy <- Exp2%>%
select(subject,PF,CC,VR,RAPM)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp2_spabRT$change <- as.factor(Exp2_spabRT$change)
Exp2_spabRT <- within(Exp2_spabRT,change <- relevel(change,ref="0"))
levels(Exp2_spabRT$change)
summary(Exp2_spabRT$change)
View(TIME)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp2_spabRT$change <- as.factor(Exp2_spabRT$change)
Exp2_spabRT <- within(Exp2_spabRT,change <- relevel(change,ref="0"))
Exp2 <- read.spss('Input_3C.2_8.01.19.sav',to.data.frame = T)
Exp2<- Exp2[-62,]
Exp2_psy <- Exp2%>%
select(subject,PF,CC,VR,RAPM)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")
setwd("~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.2")
thepath = "~/Documents/Third Year Project/Chemistry/Symmetry/SymmetryDataAnalysis/RawData/3C.2"
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(lme4)#linear mixed model
#install.packages("rstatix")
library(rstatix)
##read raw text data
txt_files_ls = list.files(path=thepath, pattern = "*.txt")
txt_files_df <- lapply(txt_files_ls, function(x) { tmp <- try(read.table(file = x, header = TRUE, sep=";"))
if (!inherits(tmp, 'try-error')) tmp
})
combined_df <- do.call("rbind", lapply(txt_files_df, as.data.frame))
# finds -99999 values in the accuracy column and sets them to NA so that we can omit them and saving a new data frame
combined_df$accuracy[combined_df$accuracy == -99999] <- 0
# finds timed-out trials and sets them to NA
combined_df$time[combined_df$time == -1] <- NA
# no dual task trials set as NA
combined_df$dualTaskAcc[combined_df$dualTaskAcc == -99] <- NA
# ignore clockwise versus counterclockwise
combined_df$rotation <- with(combined_df, ifelse(rotation <= 0, -rotation, rotation))
combined_df<- combined_df[!combined_df$subject%in%c(104,105,112,115,116,128,131,133,144,147,153,150),]
combined_df_noTimeOut <- combined_df[complete.cases(combined_df[, "time"]),]
#remove incorrect trials
combined_df_noTimeOut <- combined_df_noTimeOut[combined_df_noTimeOut$accuracy==1,]
(nrow(combined_df)-nrow(combined_df_noTimeOut))/nrow(combined_df)
TIME <- aggregate(combined_df_noTimeOut$time,
list(subject=combined_df_noTimeOut$subject,rotation=combined_df_noTimeOut$rotation,
startsym=combined_df_noTimeOut$startSym,change=combined_df_noTimeOut$change), mean)
names(TIME)[5] <- "RT"
recastTIME <- recast(TIME, subject ~ variable + rotation + startsym + change, id.var = c("subject", "rotation",  "startsym","change"))
Exp2 <- read.spss('Input_3C.2_8.01.19.sav',to.data.frame = T)
Exp2<- Exp2[-62,]
Exp2_psy <- Exp2%>%
select(subject,PF,CC,VR,RAPM)
Exp2_spabRT <- merge(TIME,Exp2_psy,by="subject")%>%
mutate(SA=(scale(PF,center = T,scale = T)+scale(CC,center = T,scale = T))/2)%>%
mutate(rotation_s=scale(rotation,center=T,scale=T))%>%
select(subject,rotation_s,startsym,change,RT,SA)
Exp2_spabRT$change <- as.factor(Exp2_spabRT$change)
Exp2_spabRT <- within(Exp2_spabRT,change <- relevel(change,ref="0"))
Exp2_spabRT <- within(Exp2_spabRT,startsym <- relevel(startsym,ref="as"))
Exp2.lmmRT <- lmer(RT ~ rotation_s*startsym*change+ (1|subject), data = Exp2_spabRT, REML = F)
summary(Exp2.lmmRT)
Anova(Exp2.lmmRT)
confint(Exp2.lmmRT)
